<%= form_with(model: event, data: { mode: event.persisted? ? 'edit' : 'new' }) do |form| %>
  <script>
      document.addEventListener('turbolinks:load', function() {
          const roomSelect = document.getElementById('room_select');
          const capacityDisplay = document.getElementById('room_capacity');

          if (!roomSelect) return; // Exit if the roomSelect is not present on the page

          // Function to set the max attribute of the number_of_seats_left field
          function setMaxCapacity(maxCapacity) {
              capacityDisplay.setAttribute('max', maxCapacity); // Set max attribute
          }

          // Function to fetch room details and update the max capacity
          function updateMaxCapacity(selectedRoomId) {
              fetch(`/rooms/${selectedRoomId}/details`)
                  .then(response => response.json())
                  .then(data => {
                      const maxCapacity = data.capacity || '';
                      setMaxCapacity(maxCapacity);
                  })
                  .catch(error => console.error('Error fetching room details:', error));
          }

          // Event listener for when the room selection changes
          roomSelect.addEventListener('change', function() {
              const selectedRoomId = this.value;
              if (!selectedRoomId) {
                  setMaxCapacity(''); // Clear capacity if no room is selected
                  return;
              }

              updateMaxCapacity(selectedRoomId);
          });

          // Set max capacity based on whether it's a new event or an update
          const form = document.querySelector('form');
          if (form.dataset.mode === 'new') {
              // Set max capacity to room capacity when creating a new event
              const selectedRoomId = roomSelect.value;
              if (selectedRoomId) {
                  updateMaxCapacity(selectedRoomId);
              }
          } else if (form.dataset.mode === 'edit') {
              // Set max capacity to current number of seats left when editing an existing event
              const currentSeatsLeft = capacityDisplay.value;
              setMaxCapacity(currentSeatsLeft);
          }
      });
  </script>
  <% if event.errors.any? %>
    <div style="color: red">
      <h2><%= pluralize(event.errors.count, "error") %> prohibited this event from being saved:</h2>

      <ul>
        <% event.errors.each do |error| %>
          <li><%= error.full_message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <%= form.label :name, style: "display: block" %>
    <%= form.text_field :name %>
  </div>

  <div>
    <%= form.label :room_id, "Room" %>
    <%= form.collection_select :room_id, Room.all, :id, :location, { prompt: "Select a room" }, { class: "form-control",id: "room_select" } %>
  </div>


  <div>
    <%= form.label :category, "Category:", style: "display: block" %>
    <%= form.select :category, options_for_select(["Concerts", "Sports", "Arts & Theatre", "Miscellaneous/Family â€“ Private"], form.object.category), include_blank: true %>
  </div>

  <div>
    <%= form.label :date, style: "display: block" %>
    <%= form.date_field :date %>
  </div>

  <div>
    <%= form.label :start_time, "Start Time", style: "display: block" %>
    <%= form.time_select :start_time, {}, {class: "form-control"} %>
  </div>

  <div>
    <%= form.label :end_time, "End Time", style: "display: block" %>
    <%= form.time_select :end_time, {}, {class: "form-control"} %>
  </div>


  <div>
    <%= form.label :ticket_price, style: "display: block" %>
    <%= form.text_field :ticket_price %>
  </div>

  <div>
    <%= form.label :number_of_seats_left, style: "display: block" %>
    <%= form.number_field :number_of_seats_left, id: "room_capacity", max: "YOUR_UPPER_LIMIT" %>
  </div>

  <br>

  <div>
    <%= form.submit %>
  </div>
<% end %>
